<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="BackBumperPressed" type="0" type_size="1" nature="4" stm_value_name="BackBumperPressed" inner="1" tooltip="BackBumperPressed desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Play Sound" id="4" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="968" y="10"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../Clock-Alarm01-1 4.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create
        self.tabletService=ALProxy('ALTabletService',"172.16.255.148",9559)
        self.tabletService.setVolume(5)
        self.logger.info("読み込み")


  #another proxy as wait is blocking if audioout is remote





    def onLoad(self):
        self.bIsRunning = False
        self.ids = []


    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Box name="Log" id="3" localization="8" tooltip="Prompt the message in the debug window. You can set a prefix and a priority&#x0A;for the message in the parameters." x="78" y="437"><bitmap>media/images/box/print.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_message(self, p):
        sPriority = self.getParameter("Priority")
        sMessage = self.getParameter("Message prefix")
        if( sMessage != "" and p != None ):
            sMessage += ": "
        if( p != None ):
            sMessage += str(p)
        if( sPriority == "Fatal" ):
            self.logger.fatal( sMessage )
        elif( sPriority == "Error" ):
            self.logger.error( sMessage )
        elif( sPriority == "Warning" ):
            self.logger.warning( sMessage )
        elif( sPriority == "Info" ):
            self.logger.info( sMessage )
        elif( sPriority == "Debug" ):
            self.logger.debug( sMessage )
        self.onDone()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="message" type="0" type_size="1" nature="1" inner="0" tooltip='The message to print or a &quot;Bang&quot; to only print the message set as parameter.' id="2" /><Output name="onDone" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Message prefix" inherits_from_parent="0" content_type="3" value="Message text" default_value="Message text" custom_choice="0" tooltip="Enter the text you want to print before the input message." id="4" /><Parameter name="Priority" inherits_from_parent="0" content_type="3" value="Info" default_value="Info" custom_choice="0" tooltip="Enter the priority of your message. If you select error, the box will get red when it will be stimulated." id="5"><Choice value="Fatal" /><Choice value="Error" /><Choice value="Warning" /><Choice value="Info" /><Choice value="Debug" /></Parameter></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Set Language" id="5" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" x="35" y="25"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="Japanese" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="alarm処理" id="72" localization="8" tooltip="こちらに概要を記入" x="743" y="18"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" /><Output name="output" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Random Int." id="1" localization="8" tooltip="Generate a random integer between a min number and a max number set as&#x0A;parameters.&#x0A;Note that the min and max numbers are included in the range of possible values." x="81" y="173"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nMin = 0
        self.nIndex = self.nMax - self.nMin
        self.aShuffled = []

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max value")
        nMin = self.getParameter("Min value")
        if( nMin > nMax ):
            temp = nMin
            nMin = nMax
            nMax = temp
        # if shuffle
        if( self.getParameter("Shuffle") ):
            self.nIndex += 1
            if( self.nIndex > self.nMax - self.nMin or nMax != self.nMax or nMin != self.nMin ):
                self.nMax = nMax
                self.nMin = nMin
                self.nIndex = 0
                self.aShuffled = []
                for i in range( nMin, nMax + 1 ):
                    self.aShuffled.insert( random.randint(0, len(self.aShuffled)), i )
            self.output_RandomValue( self.aShuffled[self.nIndex] )
        # if not shuffle
        else:
            self.nIndex = self.nMax - self.nMin
            self.output_RandomValue( random.randint( nMin, nMax ) )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Generate a random integer." id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value obtained." id="3" /><Parameter name="Min value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="1000" tooltip="The minimum value you can get." id="4" /><Parameter name="Max value" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000" tooltip="The maximum number you can get." id="5" /><Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between min and&#x0A;max before giving the same number twice." id="6" /></Box><Box name="Switch Case" id="2" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="213" y="221"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="8" /></Box><Box name="headtouch" id="3" localization="8" tooltip="" x="442" y="20"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="72" y="34"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="あたまにさわってね" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Box name="Tactile Head" id="1" localization="8" tooltip="Detect touch on head tactile sensor." x="243" y="21"><bitmap>media/images/box/sensors/tactileHead.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" /><Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" /><Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Head-sequence" type="Lock" timeout="0" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="9" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="R.Handtouch" id="4" localization="8" tooltip="" x="447" y="117"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="72" y="34"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="みぎてにさわってね" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Box name="Tactile R.Hand" id="1" localization="8" tooltip="Detect touch on right hand tactile sensor." x="234" y="24"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="HRLeftTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightLeftTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="HRBackTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightBackTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="HRRightTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightRightTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="leftTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The left of the right hand was touched." id="8" /><Output name="backTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The back of the right hand was touched." id="9" /><Output name="rightTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The right of the right hand was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="if &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="157" y="130"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="157" y="28"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="157" y="232"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Right arm-sequence" type="Lock" timeout="0" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="9" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="L.Handtouch " id="5" localization="8" tooltip="" x="454" y="214"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="72" y="34"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="ひだりてにさわってね" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Box name="Tactile L.Hand" id="1" localization="8" tooltip="Detect touch on left hand tactile sensor." x="208" y="36"><bitmap>media/images/box/movement/move_leftarm.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="HLLeftTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftLeftTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="HLBackTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftBackTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="HLRightTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftRightTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="leftTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The left of the left hand was touched." id="8" /><Output name="backTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The back of the left hand was touched." id="9" /><Output name="rightTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The right of the left hand was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="if &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="171" y="142"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="171" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="171" y="246"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Left arm-sequence" type="Lock" timeout="0" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="9" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="R.Bumpertouch" id="6" localization="8" tooltip="" x="455" y="309"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="72" y="34"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="右のバンパーをおしてね" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Box name="Bumpers" id="1" localization="8" tooltip="Listen to bumpers sensors. Stimulate onLeft or onRight output depending on&#x0A;which bumper is stimulated." x="203" y="38"><bitmap>media/images/box/movement/move_foot.png</bitmap><bitmap>media/images/box/movement/move_leftfoot.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="LeftBumperPressed" type="0" type_size="1" nature="4" stm_value_name="LeftBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="RightBumperPressed" type="0" type_size="1" nature="4" stm_value_name="RightBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="6" /><Output name="onLeft" type="1" type_size="1" nature="2" inner="0" tooltip="When left bumper is stimulated." id="7" /><Output name="onRight" type="1" type_size="1" nature="2" inner="0" tooltip="When right bumper is stimulated." id="8" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="196" y="61"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Box name="If &gt; 0" id="4" localization="8" tooltip="Transmit only if value is &gt; 0." x="197" y="165"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="7" outputowner="2" indexofoutput="3" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="8" outputowner="4" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="8" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="L.Bumpertouch" id="7" localization="8" tooltip="" x="455" y="416"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="72" y="34"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="ひだりのバンパーをおしてね" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Box name="Bumpers" id="1" localization="8" tooltip="Listen to bumpers sensors. Stimulate onLeft or onRight output depending on&#x0A;which bumper is stimulated." x="236" y="74"><bitmap>media/images/box/movement/move_foot.png</bitmap><bitmap>media/images/box/movement/move_leftfoot.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="LeftBumperPressed" type="0" type_size="1" nature="4" stm_value_name="LeftBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="RightBumperPressed" type="0" type_size="1" nature="4" stm_value_name="RightBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="6" /><Output name="onLeft" type="1" type_size="1" nature="2" inner="0" tooltip="When left bumper is stimulated." id="7" /><Output name="onRight" type="1" type_size="1" nature="2" inner="0" tooltip="When right bumper is stimulated." id="8" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="196" y="61"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Box name="If &gt; 0" id="4" localization="8" tooltip="Transmit only if value is &gt; 0." x="197" y="165"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="7" outputowner="2" indexofoutput="3" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="8" outputowner="4" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="7" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="hurry" id="8" localization="8" tooltip="" x="286" y="497"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Wait" id="8" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="191" y="117"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="60" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Say" id="9" localization="8" tooltip="Say some text. The text can be localized." x="204" y="246"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="はやくおきてください" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="3" outputowner="3" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="0" indexofinput="3" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="3" outputowner="5" indexofoutput="4" /><Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Counter" id="75" localization="-1" tooltip="Represent a counter.&#x0A;&#x0A;Each time the onStart input is stimulated, the counter value is sent on the&#x0A;currentValue output and incremented (or decremented) by Step value, from&#x0A;its Initial value to its Final value set in the parameters. Once the counter value is&#x0A;higher than its Final value, the onReinitialized output is stimulated and&#x0A;the counter is reinitialized to the Initial value.&#x0A;&#x0A;Note: You can also reinitialize the counter by stimulating the onInit&#x0A;input." x="714" y="128"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.initializeParameters()
        if( self.getParameter("Final value") - self.getParameter("Initial value") >= 0 ):
            self.stepSign = +1
        else:
            self.stepSign = -1

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onNext(self):
        bParamChanged = ( self.nLast != self.getParameter("Final value") or self.nFirst != self.getParameter("Initial value") )
        bEnd = ( self.stepSign * self.nCounter > self.stepSign * self.nLast )
        if( bEnd or bParamChanged ):
            self.onInput_onInit()
        if( not bEnd or bParamChanged ):
            currentCounter = self.nCounter
            self.nCounter = self.nCounter + self.stepSign * self.getParameter("Step value")
            self.currentValue( currentCounter )

    def initializeParameters(self):
        self.nFirst = self.getParameter("Initial value")
        self.nCounter = self.nFirst
        self.nLast = self.getParameter("Final value")

    def onInput_onInit(self):
        self.initializeParameters()
        self.onReinitialized()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onNext" type="1" type_size="1" nature="1" inner="0" tooltip="The counter next value is sent on the currentValue output when a signal is&#x0A;received on this input, unless it reached its Final value, then the onReinitialized&#x0A;output is stimulated." id="2" /><Input name="onInit" type="1" type_size="1" nature="1" inner="0" tooltip="When a signal is received on this input, the counter is reinitialized to its Initial&#x0A;value." id="3" /><Output name="currentValue" type="2" type_size="1" nature="2" inner="0" tooltip="Stimulated for each interaction with the counter current value." id="4" /><Output name="onReinitialized" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated when the loop is over or if the counter has been reinitialized." id="5" /><Parameter name="Initial value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="500" tooltip="The initial value of the counter (for the first iteration)." id="6" /><Parameter name="Step value" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="1" max="500" tooltip="The counter value will be incremented or decremented with this value." id="7" /><Parameter name="Final value" inherits_from_parent="0" content_type="1" value="2" default_value="5" min="0" max="500" tooltip="It is the maximum (if increasing) or the minimum (if decreasing) value of the&#x0A;counter (thus for the last iteration).&#x0A;&#x0A;After this value, if the onStart input is called, the onReinitialized output will be&#x0A;stimulated and the counter will be reinitialized to its Initial value." id="8" /></Box><Box name="time" id="1" localization="8" tooltip="" x="329" y="175"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import time
import datetime
import sys
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        #nowTime = datetime.utcfromtimestamp(time.time())
        nowTime = datetime.datetime.fromtimestamp(time.time()).strftime("%Y/%m/%d %H:%M:%S ")
        self.onStopped(nowTime)
        self.logger.info(nowTime)
        pass
    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /></Box><Box name="Get Data" id="3" localization="8" tooltip="Retrieves from NAOqi&apos;s shared memory the given value at the given key." x="449" y="159"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.param = p
        self.memory.raiseEvent(self.getParameter("key"), self.param)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload()
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the retrieved value from ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="timeViw" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="208" y="191"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Wait (1)" id="7" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="848" y="130"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="n_直立" id="13" localization="8" tooltip="Enter tooltip here" x="1105" y="13"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="30" size="30"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.8652" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.66993" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.703127" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-29.707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-70.5762" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.59051" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="90.2637" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="8.4375" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="0.788627" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="29.6191" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="70.4883" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.59051" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="90" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-8.26171" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="0.964409" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="motionBox" id="8" localization="8" tooltip="" x="574" y="131"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="n_両手をあげて、もっともっと" id="87" localization="8" tooltip="Enter tooltip here" x="507" y="9"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="130" size="130"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.6016" /><Key frame="60" value="-20.5" /><Key frame="67" value="-20.5" /><Key frame="72" value="-20.5" /><Key frame="81" value="-7" /><Key frame="90" value="-20.5" /><Key frame="95" value="-20.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="-0.175782" /><Key frame="60" value="-4.16139e-05" /><Key frame="67" value="-4.16139e-05" /><Key frame="72" value="-4.16139e-05" /><Key frame="81" value="-4.16139e-05" /><Key frame="90" value="-4.16139e-05" /><Key frame="95" value="-4.16139e-05" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.75782" /><Key frame="60" value="-6" /><Key frame="67" value="-6" /><Key frame="72" value="-6" /><Key frame="90" value="-1.66993" /><Key frame="95" value="-1.66993" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.703127" /><Key frame="60" value="-0.615236" /><Key frame="67" value="-0.615236" /><Key frame="72" value="-0.615236" /><Key frame="90" value="-0.703127" /><Key frame="95" value="-0.703127" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.351564" /><Key frame="60" value="-4.13086" /><Key frame="67" value="-4.13086" /><Key frame="72" value="-4.13086" /><Key frame="90" value="-0.703127" /><Key frame="95" value="-0.703127" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.2871" /><Key frame="60" value="-39.3731" /><Key frame="67" value="-38.9672" /><Key frame="72" value="-38.9672" /><Key frame="81" value="-71.2936" /><Key frame="90" value="-40" /><Key frame="95" value="-40" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-7.20704" /><Key frame="60" value="-101.605" /><Key frame="67" value="-101.873" /><Key frame="72" value="-101.873" /><Key frame="81" value="-102.328" /><Key frame="90" value="-102.3" /><Key frame="95" value="-102.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.043058" /><Key frame="60" value="0.9984" /><Key frame="67" value="0.9984" /><Key frame="72" value="0.9984" /><Key frame="81" value="0.9984" /><Key frame="90" value="0.9984" /><Key frame="95" value="0.9984" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.5625" /><Key frame="60" value="5.79845" /><Key frame="67" value="5.73064" /><Key frame="72" value="20.8" /><Key frame="81" value="2.07305" /><Key frame="90" value="2.10004" /><Key frame="95" value="2.10004" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.7676" /><Key frame="60" value="14.0603" /><Key frame="67" value="14.7323" /><Key frame="72" value="14.7323" /><Key frame="81" value="15.9002" /><Key frame="90" value="15.8" /><Key frame="95" value="15.8" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.2242" /><Key frame="60" value="-66.3" /><Key frame="67" value="-66.3003" /><Key frame="72" value="-66.3003" /><Key frame="81" value="-66.3003" /><Key frame="90" value="-66.3" /><Key frame="95" value="-66.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="83.6719" /><Key frame="60" value="38.9384" /><Key frame="67" value="38.9672" /><Key frame="72" value="38.9672" /><Key frame="81" value="71.2936" /><Key frame="90" value="40" /><Key frame="95" value="40" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.5918" /><Key frame="60" value="101.864" /><Key frame="67" value="101.873" /><Key frame="72" value="101.873" /><Key frame="81" value="102.328" /><Key frame="90" value="102.3" /><Key frame="95" value="102.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0413005" /><Key frame="60" value="0.9984" /><Key frame="67" value="0.9984" /><Key frame="72" value="0.9984" /><Key frame="81" value="1" /><Key frame="90" value="1" /><Key frame="95" value="1" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.0352" /><Key frame="60" value="5.71537" /><Key frame="67" value="5.73064" /><Key frame="72" value="20.8" /><Key frame="81" value="2.07294" /><Key frame="90" value="2.10004" /><Key frame="95" value="2.10004" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.1191" /><Key frame="60" value="-14.6803" /><Key frame="67" value="-14.7323" /><Key frame="72" value="-14.7323" /><Key frame="81" value="-15.9002" /><Key frame="90" value="-15.8" /><Key frame="95" value="-15.8" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.1862" /><Key frame="60" value="66.3" /><Key frame="67" value="66.3003" /><Key frame="72" value="66.3003" /><Key frame="81" value="66.3003" /><Key frame="90" value="66.3" /><Key frame="95" value="66.3" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="214" y="152"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="このIOはボックスにより自動で追加されました。詳細はボックスのツールチップをご覧ください。" id="8" /></Box><Box name="Random Int." id="2" localization="8" tooltip="Generate a random integer between a min number and a max number set as&#x0A;parameters.&#x0A;Note that the min and max numbers are included in the range of possible values." x="111" y="205"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nMin = 0
        self.nIndex = self.nMax - self.nMin
        self.aShuffled = []

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max value")
        nMin = self.getParameter("Min value")
        if( nMin > nMax ):
            temp = nMin
            nMin = nMax
            nMax = temp
        # if shuffle
        if( self.getParameter("Shuffle") ):
            self.nIndex += 1
            if( self.nIndex > self.nMax - self.nMin or nMax != self.nMax or nMin != self.nMin ):
                self.nMax = nMax
                self.nMin = nMin
                self.nIndex = 0
                self.aShuffled = []
                for i in range( nMin, nMax + 1 ):
                    self.aShuffled.insert( random.randint(0, len(self.aShuffled)), i )
            self.output_RandomValue( self.aShuffled[self.nIndex] )
        # if not shuffle
        else:
            self.nIndex = self.nMax - self.nMin
            self.output_RandomValue( random.randint( nMin, nMax ) )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Generate a random integer." id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value obtained." id="3" /><Parameter name="Min value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="1000" tooltip="The minimum value you can get." id="4" /><Parameter name="Max value" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000" tooltip="The maximum number you can get." id="5" /><Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between min and&#x0A;max before giving the same number twice." id="6" /></Box><Box name="n_交通事故" id="114" localization="8" tooltip="Enter tooltip here" x="169" y="380"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="240" size="240"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.6016" /><Key frame="50" value="-11.4592" /><Key frame="58" value="-20" /><Key frame="65" value="-11.4592" /><Key frame="73" value="-20" /><Key frame="80" value="-11.4592" /><Key frame="88" value="-20" /><Key frame="95" value="-11.4592" /><Key frame="98" value="-11.5" /><Key frame="119" value="-11.5" /><Key frame="130" value="-24.2605" /><Key frame="175" value="-38.4623" /><Key frame="193" value="-38.4623" /><Key frame="240" value="-11.7774" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0.263673" /><Key frame="50" value="-4.70003e-21" /><Key frame="58" value="0" /><Key frame="65" value="4.70003e-21" /><Key frame="73" value="-4.69307e-22" /><Key frame="80" value="-4.70003e-21" /><Key frame="88" value="-3.27401e-21" /><Key frame="95" value="4.70003e-21" /><Key frame="98" value="23" /><Key frame="119" value="23" /><Key frame="130" value="19.2" /><Key frame="175" value="18.9394" /><Key frame="193" value="18.9394" /><Key frame="240" value="0.263673" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.66993" /><Key frame="50" value="-2.65149e-07" /><Key frame="58" value="-1.32066e-07" /><Key frame="65" value="-4.11035e-07" /><Key frame="73" value="-1.84923e-07" /><Key frame="80" value="-2.65149e-07" /><Key frame="88" value="1.16875e-07" /><Key frame="95" value="-4.11035e-07" /><Key frame="98" value="-4.11035e-07" /><Key frame="119" value="-4.11035e-07" /><Key frame="130" value="-1.98033" /><Key frame="175" value="0" /><Key frame="193" value="0" /><Key frame="240" value="-1.75782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.791018" /><Key frame="50" value="-1.70932e-13" /><Key frame="58" value="4.44388e-13" /><Key frame="65" value="1.70931e-13" /><Key frame="73" value="-6.57964e-14" /><Key frame="80" value="-1.70932e-13" /><Key frame="88" value="3.20482e-12" /><Key frame="95" value="1.70931e-13" /><Key frame="98" value="1.70931e-13" /><Key frame="119" value="1.70931e-13" /><Key frame="130" value="-1" /><Key frame="175" value="-5" /><Key frame="193" value="-5" /><Key frame="240" value="-0.791018" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.703127" /><Key frame="50" value="-3.99982" /><Key frame="58" value="-3.99982" /><Key frame="65" value="-3.99982" /><Key frame="73" value="-3.99982" /><Key frame="80" value="-3.99982" /><Key frame="88" value="-3.99982" /><Key frame="95" value="-3.99982" /><Key frame="98" value="-3.99982" /><Key frame="119" value="-3.99982" /><Key frame="130" value="-3" /><Key frame="175" value="-2.99997" /><Key frame="193" value="-2.99997" /><Key frame="240" value="-0.615236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.6387" /><Key frame="50" value="-43.2752" /><Key frame="58" value="-47.9614" /><Key frame="65" value="-51.8" /><Key frame="73" value="-47.0998" /><Key frame="80" value="-43.2752" /><Key frame="88" value="-47.9632" /><Key frame="95" value="-51.8" /><Key frame="98" value="-51.8" /><Key frame="119" value="-51.8" /><Key frame="130" value="-50.3051" /><Key frame="175" value="-59.5748" /><Key frame="193" value="-59.5748" /><Key frame="240" value="-84.6387" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-7.4707" /><Key frame="50" value="-79.5356" /><Key frame="58" value="-81.696" /><Key frame="65" value="-81.936" /><Key frame="73" value="-80.6388" /><Key frame="80" value="-79.5356" /><Key frame="88" value="-80.8556" /><Key frame="95" value="-81.936" /><Key frame="98" value="-81.936" /><Key frame="119" value="-81.936" /><Key frame="130" value="-67.4154" /><Key frame="175" value="-36.5131" /><Key frame="193" value="-36.5131" /><Key frame="240" value="-7.4707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0413005" /><Key frame="50" value="0.05" /><Key frame="58" value="0.05" /><Key frame="65" value="0.05" /><Key frame="73" value="0.05" /><Key frame="80" value="0.05" /><Key frame="88" value="0.05" /><Key frame="95" value="0.05" /><Key frame="98" value="0.05" /><Key frame="119" value="0.05" /><Key frame="130" value="0.9256" /><Key frame="175" value="0.9708" /><Key frame="193" value="0.9708" /><Key frame="240" value="0.0413005" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.0352" /><Key frame="50" value="110.9" /><Key frame="58" value="90.0871" /><Key frame="65" value="73.0686" /><Key frame="73" value="93.8326" /><Key frame="80" value="110.9" /><Key frame="88" value="90.0956" /><Key frame="95" value="73.0686" /><Key frame="98" value="73.0686" /><Key frame="119" value="73.0686" /><Key frame="130" value="0.84343" /><Key frame="175" value="-56.9551" /><Key frame="193" value="-56.9551" /><Key frame="240" value="81.2988" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.5039" /><Key frame="50" value="11.9" /><Key frame="58" value="10.034" /><Key frame="65" value="9.8" /><Key frame="73" value="11.0775" /><Key frame="80" value="11.9" /><Key frame="88" value="10.7452" /><Key frame="95" value="9.8" /><Key frame="98" value="9.8" /><Key frame="119" value="9.8" /><Key frame="130" value="0.5" /><Key frame="175" value="2.86052" /><Key frame="193" value="2.86052" /><Key frame="240" value="51.5918" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-85.8726" /><Key frame="50" value="2.72224" /><Key frame="58" value="-8.3919" /><Key frame="65" value="-17.488" /><Key frame="73" value="-6.37386" /><Key frame="80" value="2.72224" /><Key frame="88" value="-8.3919" /><Key frame="95" value="-17.488" /><Key frame="98" value="-17.488" /><Key frame="119" value="-17.488" /><Key frame="130" value="-65.7454" /><Key frame="175" value="4.74411" /><Key frame="193" value="4.74411" /><Key frame="240" value="-86.0484" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="84.0234" /><Key frame="50" value="51.8" /><Key frame="58" value="45.027" /><Key frame="65" value="43.2162" /><Key frame="73" value="47.9367" /><Key frame="80" value="51.8" /><Key frame="88" value="47.0712" /><Key frame="95" value="43.2162" /><Key frame="98" value="43.2162" /><Key frame="119" value="43.2162" /><Key frame="130" value="57.4929" /><Key frame="175" value="40.7922" /><Key frame="193" value="40.7922" /><Key frame="240" value="84.0234" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="5.80078" /><Key frame="50" value="81.936" /><Key frame="58" value="80.659" /><Key frame="65" value="79.598" /><Key frame="73" value="80.8837" /><Key frame="80" value="81.936" /><Key frame="88" value="80.666" /><Key frame="95" value="79.598" /><Key frame="98" value="79.598" /><Key frame="119" value="79.598" /><Key frame="130" value="115.575" /><Key frame="175" value="119.451" /><Key frame="193" value="119.451" /><Key frame="240" value="6.06446" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0465729" /><Key frame="50" value="0.1816" /><Key frame="58" value="0.1816" /><Key frame="65" value="0.1816" /><Key frame="73" value="0.1816" /><Key frame="80" value="0.1816" /><Key frame="88" value="0.1816" /><Key frame="95" value="0.1816" /><Key frame="98" value="0.1816" /><Key frame="119" value="0.1816" /><Key frame="130" value="0.8076" /><Key frame="175" value="0.9988" /><Key frame="193" value="0.9988" /><Key frame="240" value="0.0360281" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.123" /><Key frame="50" value="73.0686" /><Key frame="58" value="93.8625" /><Key frame="65" value="110.909" /><Key frame="73" value="90.0998" /><Key frame="80" value="73.0686" /><Key frame="88" value="93.8504" /><Key frame="95" value="110.909" /><Key frame="98" value="110.909" /><Key frame="119" value="110.909" /><Key frame="130" value="32.6889" /><Key frame="175" value="-69.3926" /><Key frame="193" value="-69.3926" /><Key frame="240" value="81.2988" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.0312" /><Key frame="50" value="-9.8" /><Key frame="58" value="-11.2153" /><Key frame="65" value="-12.2847" /><Key frame="73" value="-10.9183" /><Key frame="80" value="-9.8" /><Key frame="88" value="-11.2505" /><Key frame="95" value="-12.2847" /><Key frame="98" value="-12.2847" /><Key frame="119" value="-12.2847" /><Key frame="130" value="-20.4812" /><Key frame="175" value="-15.5254" /><Key frame="193" value="-15.5254" /><Key frame="240" value="-51.8555" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.6256" /><Key frame="50" value="17.488" /><Key frame="58" value="1.75551" /><Key frame="65" value="-2.72224" /><Key frame="73" value="8.3919" /><Key frame="80" value="17.488" /><Key frame="88" value="6.37386" /><Key frame="95" value="-2.72224" /><Key frame="98" value="-2.72224" /><Key frame="119" value="-2.72224" /><Key frame="130" value="-23.4695" /><Key frame="175" value="-103.626" /><Key frame="193" value="-103.626" /><Key frame="240" value="87.5378" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_超音波" id="83" localization="8" tooltip="Enter tooltip here" x="106" y="525"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="135" size="135"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.4258" /><Key frame="63" value="-11.5" /><Key frame="79" value="-11.5" /><Key frame="86" value="2.00005" /><Key frame="93" value="-11.5245" /><Key frame="102" value="-11.5245" /><Key frame="132" value="-11.8652" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0.0878909" /><Key frame="63" value="-4.16139e-05" /><Key frame="79" value="-4.16139e-05" /><Key frame="86" value="-4.16139e-05" /><Key frame="93" value="-1.07332e-06" /><Key frame="102" value="-1.07332e-06" /><Key frame="132" value="0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.14258" /><Key frame="63" value="-1.14258" /><Key frame="78" value="-1.14258" /><Key frame="85" value="-1.14258" /><Key frame="92" value="-1.14258" /><Key frame="102" value="-1.31836" /><Key frame="132" value="-1.31836" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.615236" /><Key frame="63" value="-0.615236" /><Key frame="78" value="-0.615236" /><Key frame="85" value="-0.615236" /><Key frame="92" value="-0.615236" /><Key frame="102" value="-0.615236" /><Key frame="132" value="-0.615236" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.878909" /><Key frame="63" value="-0.878909" /><Key frame="78" value="-0.878909" /><Key frame="85" value="-0.878909" /><Key frame="92" value="-0.878909" /><Key frame="102" value="-0.878909" /><Key frame="132" value="-0.878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.2871" /><Key frame="53" value="-58.1" /><Key frame="63" value="-58.1" /><Key frame="78" value="-78" /><Key frame="92" value="-78" /><Key frame="102" value="-78" /><Key frame="115" value="-72.9492" /><Key frame="132" value="-84.5508" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-5.625" /><Key frame="53" value="-119.5" /><Key frame="63" value="-119.5" /><Key frame="78" value="-77.4" /><Key frame="92" value="-77.4007" /><Key frame="102" value="-77.4007" /><Key frame="115" value="-49.3945" /><Key frame="132" value="-7.03126" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0421792" /><Key frame="53" value="0.996" /><Key frame="63" value="0.996" /><Key frame="78" value="1" /><Key frame="92" value="1" /><Key frame="102" value="1" /><Key frame="115" value="0.606327" /><Key frame="132" value="0.043058" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.8262" /><Key frame="53" value="23.2058" /><Key frame="63" value="23.2058" /><Key frame="78" value="39.4" /><Key frame="92" value="39.4359" /><Key frame="102" value="39.4359" /><Key frame="115" value="56.6016" /><Key frame="132" value="81.2988" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="52.207" /><Key frame="53" value="18.1" /><Key frame="63" value="18.1" /><Key frame="78" value="16.2" /><Key frame="92" value="16.2094" /><Key frame="102" value="16.2094" /><Key frame="115" value="35.8" /><Key frame="132" value="51.5039" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.0484" /><Key frame="40" value="4.3" /><Key frame="53" value="-6" /><Key frame="63" value="-6" /><Key frame="78" value="-9.31412" /><Key frame="92" value="-9.3144" /><Key frame="102" value="-9.3144" /><Key frame="115" value="-41.1357" /><Key frame="132" value="-86.6637" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="83.9356" /><Key frame="53" value="58.1" /><Key frame="63" value="58.1" /><Key frame="78" value="83.939" /><Key frame="92" value="83.9568" /><Key frame="102" value="83.9568" /><Key frame="115" value="77.7832" /><Key frame="132" value="83.7598" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.15235" /><Key frame="53" value="119.5" /><Key frame="63" value="119.5" /><Key frame="78" value="77.4" /><Key frame="92" value="77.4007" /><Key frame="102" value="77.4007" /><Key frame="115" value="49.2188" /><Key frame="132" value="6.15235" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0413005" /><Key frame="53" value="0.996" /><Key frame="63" value="0.996" /><Key frame="78" value="1" /><Key frame="92" value="1" /><Key frame="102" value="1" /><Key frame="115" value="0.602812" /><Key frame="132" value="0.0307558" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.8594" /><Key frame="53" value="23.2058" /><Key frame="63" value="23.2058" /><Key frame="78" value="39.4" /><Key frame="92" value="39.4359" /><Key frame="102" value="39.4359" /><Key frame="115" value="55.8984" /><Key frame="132" value="81.3867" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-51.7676" /><Key frame="53" value="-18.1" /><Key frame="63" value="-18.1" /><Key frame="78" value="-16.2" /><Key frame="92" value="-16.2094" /><Key frame="102" value="-16.2094" /><Key frame="115" value="-35.8" /><Key frame="132" value="-51.7676" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.5378" /><Key frame="40" value="-4.3" /><Key frame="53" value="6" /><Key frame="63" value="6" /><Key frame="78" value="9.31412" /><Key frame="92" value="9.3144" /><Key frame="102" value="9.3144" /><Key frame="115" value="41.3946" /><Key frame="132" value="87.2741" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_ドラムロール" id="65" localization="8" tooltip="Enter tooltip here" x="722" y="440"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="220" size="220"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.3379" /><Key frame="50" value="-11.5" /><Key frame="61" value="15" /><Key frame="157" value="15" /><Key frame="160" value="15" /><Key frame="165" value="-11.5" /><Key frame="190" value="-11.5" /><Key frame="218" value="-11.6895" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0.439454" /><Key frame="50" value="-2.4418e-05" /><Key frame="61" value="0" /><Key frame="157" value="0" /><Key frame="160" value="0" /><Key frame="165" value="0" /><Key frame="190" value="0" /><Key frame="218" value="0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-83.584" /><Key frame="50" value="-75.7277" /><Key frame="61" value="-75.7277" /><Key frame="70" value="-75.7277" /><Key frame="73" value="-75.7" /><Key frame="151" value="-75.7277" /><Key frame="157" value="-75.7277" /><Key frame="160" value="-75.7277" /><Key frame="165" value="-88.418" /><Key frame="190" value="-88.418" /><Key frame="218" value="-84.7266" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-6.85547" /><Key frame="50" value="18" /><Key frame="61" value="18" /><Key frame="64" value="26" /><Key frame="67" value="0" /><Key frame="70" value="26" /><Key frame="73" value="0" /><Key frame="76" value="26" /><Key frame="79" value="0" /><Key frame="82" value="26" /><Key frame="85" value="0" /><Key frame="88" value="26" /><Key frame="91" value="0" /><Key frame="94" value="26" /><Key frame="97" value="0" /><Key frame="100" value="26" /><Key frame="103" value="0" /><Key frame="106" value="26" /><Key frame="109" value="0" /><Key frame="112" value="26" /><Key frame="115" value="0" /><Key frame="118" value="26" /><Key frame="121" value="0" /><Key frame="124" value="26" /><Key frame="127" value="0" /><Key frame="130" value="26" /><Key frame="133" value="0" /><Key frame="136" value="26" /><Key frame="139" value="0" /><Key frame="142" value="26" /><Key frame="145" value="0" /><Key frame="148" value="26" /><Key frame="151" value="3.83663e-05" /><Key frame="154" value="26" /><Key frame="157" value="18" /><Key frame="160" value="18" /><Key frame="165" value="2.90039" /><Key frame="190" value="2.90039" /><Key frame="218" value="-7.11915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0421792" /><Key frame="50" value="0" /><Key frame="61" value="0" /><Key frame="151" value="0" /><Key frame="157" value="0" /><Key frame="160" value="0" /><Key frame="165" value="0.965729" /><Key frame="190" value="0.965729" /><Key frame="218" value="0.043058" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.1562" /><Key frame="50" value="10.0226" /><Key frame="61" value="10.0226" /><Key frame="151" value="10.0227" /><Key frame="157" value="10.0226" /><Key frame="160" value="10.0226" /><Key frame="165" value="29.3555" /><Key frame="190" value="29.3555" /><Key frame="218" value="80.9473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.5039" /><Key frame="50" value="40.1661" /><Key frame="61" value="40.1661" /><Key frame="151" value="40.1661" /><Key frame="157" value="40.1661" /><Key frame="160" value="40.1661" /><Key frame="165" value="51.6797" /><Key frame="190" value="51.6797" /><Key frame="218" value="51.7676" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-89.0367" /><Key frame="50" value="-104.5" /><Key frame="61" value="-104.5" /><Key frame="73" value="-104.5" /><Key frame="151" value="-104.5" /><Key frame="157" value="-104.5" /><Key frame="160" value="-104.5" /><Key frame="165" value="-103.012" /><Key frame="190" value="-103.012" /><Key frame="218" value="-86.9273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="83.4082" /><Key frame="50" value="75.7277" /><Key frame="61" value="75.7277" /><Key frame="67" value="75.7" /><Key frame="151" value="75.7277" /><Key frame="157" value="75.7277" /><Key frame="160" value="75.7277" /><Key frame="165" value="88.5059" /><Key frame="190" value="88.5059" /><Key frame="218" value="84.1992" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="7.29493" /><Key frame="50" value="-18" /><Key frame="61" value="-18" /><Key frame="64" value="0" /><Key frame="67" value="-26" /><Key frame="70" value="0" /><Key frame="73" value="-26" /><Key frame="76" value="0" /><Key frame="79" value="-26" /><Key frame="82" value="0" /><Key frame="85" value="-26" /><Key frame="88" value="0" /><Key frame="91" value="-26" /><Key frame="94" value="0" /><Key frame="97" value="-26" /><Key frame="100" value="0" /><Key frame="103" value="-26" /><Key frame="106" value="0" /><Key frame="109" value="-26" /><Key frame="112" value="0" /><Key frame="115" value="-26" /><Key frame="118" value="0" /><Key frame="121" value="-26" /><Key frame="124" value="0" /><Key frame="127" value="-26" /><Key frame="130" value="0" /><Key frame="133" value="-26" /><Key frame="136" value="0" /><Key frame="139" value="-26" /><Key frame="142" value="0" /><Key frame="145" value="-26" /><Key frame="148" value="0" /><Key frame="151" value="-26" /><Key frame="154" value="0" /><Key frame="157" value="-18" /><Key frame="160" value="-18" /><Key frame="165" value="-2.90039" /><Key frame="190" value="-2.90039" /><Key frame="218" value="6.5918" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0413005" /><Key frame="50" value="0" /><Key frame="61" value="0" /><Key frame="151" value="0" /><Key frame="157" value="0" /><Key frame="160" value="0" /><Key frame="165" value="0.954306" /><Key frame="190" value="0.954306" /><Key frame="218" value="0.0404218" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.332" /><Key frame="50" value="10.0226" /><Key frame="61" value="10.0226" /><Key frame="151" value="10.0227" /><Key frame="157" value="10.0226" /><Key frame="160" value="10.0226" /><Key frame="165" value="29.4434" /><Key frame="190" value="29.4434" /><Key frame="218" value="81.4746" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-51.9434" /><Key frame="50" value="-40.1661" /><Key frame="61" value="-40.1661" /><Key frame="151" value="-40.1661" /><Key frame="157" value="-40.1661" /><Key frame="160" value="-40.1661" /><Key frame="165" value="-51.6797" /><Key frame="190" value="-51.6797" /><Key frame="218" value="-51.6797" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="88.6804" /><Key frame="50" value="104.5" /><Key frame="61" value="104.5" /><Key frame="151" value="104.5" /><Key frame="157" value="104.5" /><Key frame="160" value="104.5" /><Key frame="165" value="103.886" /><Key frame="190" value="103.886" /><Key frame="218" value="87.5378" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-2.37305" /><Key frame="218" value="-1.23047" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.615236" /><Key frame="218" value="-0.615236" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.615236" /><Key frame="218" value="-0.439454" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_ゴーゴーダンス" id="60" localization="8" tooltip="Enter tooltip here" x="741" y="487"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="234" size="234"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.7774" /><Key frame="50" value="-11" /><Key frame="54" value="-2" /><Key frame="58" value="-11" /><Key frame="70" value="-11" /><Key frame="74" value="-2" /><Key frame="78" value="-11" /><Key frame="90" value="-11" /><Key frame="94" value="-2" /><Key frame="98" value="-11" /><Key frame="110" value="-11" /><Key frame="114" value="-2" /><Key frame="118" value="-11" /><Key frame="130" value="-11" /><Key frame="134" value="-2" /><Key frame="138" value="-11" /><Key frame="150" value="-11" /><Key frame="154" value="-2" /><Key frame="158" value="-11" /><Key frame="170" value="-11" /><Key frame="174" value="-2" /><Key frame="178" value="-11" /><Key frame="190" value="-11" /><Key frame="194" value="-2" /><Key frame="198" value="-11" /><Key frame="234" value="-11.7774" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="-0.175782" /><Key frame="50" value="0" /><Key frame="54" value="0" /><Key frame="58" value="0" /><Key frame="70" value="0" /><Key frame="74" value="0" /><Key frame="78" value="0" /><Key frame="90" value="0" /><Key frame="94" value="0" /><Key frame="98" value="0" /><Key frame="110" value="0" /><Key frame="114" value="0" /><Key frame="118" value="0" /><Key frame="130" value="0" /><Key frame="134" value="0" /><Key frame="138" value="0" /><Key frame="150" value="0" /><Key frame="154" value="0" /><Key frame="158" value="0" /><Key frame="170" value="0" /><Key frame="174" value="0" /><Key frame="178" value="0" /><Key frame="190" value="0" /><Key frame="194" value="0" /><Key frame="198" value="0" /><Key frame="234" value="-0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.75782" /><Key frame="53" value="0.439454" /><Key frame="73" value="0.439454" /><Key frame="93" value="0.439454" /><Key frame="113" value="0.439454" /><Key frame="133" value="0.439454" /><Key frame="153" value="0.439454" /><Key frame="173" value="0.439454" /><Key frame="193" value="0.439454" /><Key frame="234" value="-1.23047" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-1.14258" /><Key frame="53" value="0.878909" /><Key frame="73" value="-0.878909" /><Key frame="93" value="0.878909" /><Key frame="113" value="-0.878909" /><Key frame="133" value="0.878909" /><Key frame="153" value="-0.878909" /><Key frame="173" value="0.878909" /><Key frame="193" value="-0.878909" /><Key frame="234" value="-1.14258" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.703127" /><Key frame="53" value="-3.60351" /><Key frame="73" value="-3.60351" /><Key frame="93" value="-3.60351" /><Key frame="113" value="-3.60351" /><Key frame="133" value="-3.60351" /><Key frame="153" value="-3.60351" /><Key frame="173" value="-3.60351" /><Key frame="193" value="-3.60351" /><Key frame="234" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.7266" /><Key frame="53" value="-75.4981" /><Key frame="61" value="-75.4981" /><Key frame="73" value="-78.1348" /><Key frame="81" value="-78.1348" /><Key frame="93" value="-75.4981" /><Key frame="101" value="-75.4981" /><Key frame="113" value="-78.1348" /><Key frame="121" value="-78.1348" /><Key frame="133" value="-75.4981" /><Key frame="141" value="-75.4981" /><Key frame="153" value="-78.1348" /><Key frame="161" value="-78.1348" /><Key frame="173" value="-75.4981" /><Key frame="181" value="-75.4981" /><Key frame="193" value="-78.1348" /><Key frame="201" value="-78.1348" /><Key frame="204" value="-78.1348" /><Key frame="234" value="-84.6387" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-7.03126" /><Key frame="53" value="-96.2402" /><Key frame="61" value="-96.2402" /><Key frame="73" value="-63.8086" /><Key frame="81" value="-63.8086" /><Key frame="93" value="-96.2402" /><Key frame="101" value="-96.2402" /><Key frame="113" value="-63.8086" /><Key frame="121" value="-63.8086" /><Key frame="133" value="-96.2402" /><Key frame="141" value="-96.2402" /><Key frame="153" value="-63.8086" /><Key frame="161" value="-63.8086" /><Key frame="173" value="-96.2402" /><Key frame="181" value="-96.2402" /><Key frame="193" value="-63.8086" /><Key frame="201" value="-63.8086" /><Key frame="204" value="-63.8086" /><Key frame="234" value="-7.11915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0413005" /><Key frame="53" value="0" /><Key frame="61" value="0" /><Key frame="73" value="0" /><Key frame="81" value="0" /><Key frame="93" value="0" /><Key frame="101" value="0" /><Key frame="113" value="0" /><Key frame="121" value="0" /><Key frame="133" value="0" /><Key frame="141" value="0" /><Key frame="153" value="0" /><Key frame="161" value="0" /><Key frame="173" value="0" /><Key frame="181" value="0" /><Key frame="193" value="0" /><Key frame="201" value="0" /><Key frame="204" value="0" /><Key frame="234" value="0.043058" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.2109" /><Key frame="53" value="23.9062" /><Key frame="61" value="23.9062" /><Key frame="73" value="94.1309" /><Key frame="81" value="94.1309" /><Key frame="93" value="23.9062" /><Key frame="101" value="23.9062" /><Key frame="113" value="94.1309" /><Key frame="121" value="94.1309" /><Key frame="133" value="23.9062" /><Key frame="141" value="23.9062" /><Key frame="153" value="94.1309" /><Key frame="161" value="94.1309" /><Key frame="173" value="23.9062" /><Key frame="181" value="23.9062" /><Key frame="193" value="94.1309" /><Key frame="201" value="94.1309" /><Key frame="204" value="94.1309" /><Key frame="234" value="81.1231" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.7676" /><Key frame="41" value="40.3" /><Key frame="53" value="10.7227" /><Key frame="61" value="10.7227" /><Key frame="73" value="39.5508" /><Key frame="81" value="39.5508" /><Key frame="93" value="10.7227" /><Key frame="101" value="10.7227" /><Key frame="113" value="39.5508" /><Key frame="121" value="39.5508" /><Key frame="133" value="10.7227" /><Key frame="141" value="10.7227" /><Key frame="153" value="39.5508" /><Key frame="161" value="39.5508" /><Key frame="173" value="10.7227" /><Key frame="181" value="10.7227" /><Key frame="193" value="39.5508" /><Key frame="201" value="39.5508" /><Key frame="204" value="39.5508" /><Key frame="219" value="40.9" /><Key frame="234" value="51.9434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.7515" /><Key frame="53" value="-6.50159" /><Key frame="61" value="-6.50159" /><Key frame="73" value="-49.3097" /><Key frame="81" value="-49.3097" /><Key frame="93" value="-6.50159" /><Key frame="101" value="-6.50159" /><Key frame="113" value="-49.3097" /><Key frame="121" value="-49.3097" /><Key frame="133" value="-6.50159" /><Key frame="141" value="-6.50159" /><Key frame="153" value="-49.3097" /><Key frame="161" value="-49.3097" /><Key frame="173" value="-6.50159" /><Key frame="181" value="-6.50159" /><Key frame="193" value="-49.3097" /><Key frame="201" value="-49.3097" /><Key frame="204" value="-49.3097" /><Key frame="234" value="-86.1363" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="84.1113" /><Key frame="53" value="78.1348" /><Key frame="61" value="78.1348" /><Key frame="73" value="75.4981" /><Key frame="81" value="75.4981" /><Key frame="93" value="78.1348" /><Key frame="101" value="78.1348" /><Key frame="113" value="75.4981" /><Key frame="121" value="75.4981" /><Key frame="133" value="78.1348" /><Key frame="141" value="78.1348" /><Key frame="153" value="75.4981" /><Key frame="161" value="75.4981" /><Key frame="173" value="78.1348" /><Key frame="181" value="78.1348" /><Key frame="193" value="75.4981" /><Key frame="201" value="75.4981" /><Key frame="204" value="75.4981" /><Key frame="234" value="84.1992" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.24024" /><Key frame="53" value="63.8086" /><Key frame="61" value="63.8086" /><Key frame="73" value="96.2402" /><Key frame="81" value="96.2402" /><Key frame="93" value="63.8086" /><Key frame="101" value="63.8086" /><Key frame="113" value="96.2402" /><Key frame="121" value="96.2402" /><Key frame="133" value="63.8086" /><Key frame="141" value="63.8086" /><Key frame="153" value="96.2402" /><Key frame="161" value="96.2402" /><Key frame="173" value="63.8086" /><Key frame="181" value="63.8086" /><Key frame="193" value="96.2402" /><Key frame="201" value="96.2402" /><Key frame="204" value="96.2402" /><Key frame="234" value="6.24024" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0325131" /><Key frame="53" value="0" /><Key frame="61" value="0" /><Key frame="73" value="0" /><Key frame="81" value="0" /><Key frame="93" value="0" /><Key frame="101" value="0" /><Key frame="113" value="0" /><Key frame="121" value="0" /><Key frame="133" value="0" /><Key frame="141" value="0" /><Key frame="153" value="0" /><Key frame="161" value="0" /><Key frame="173" value="0" /><Key frame="181" value="0" /><Key frame="193" value="0" /><Key frame="201" value="0" /><Key frame="204" value="0" /><Key frame="234" value="0.0325131" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.9473" /><Key frame="53" value="94.1309" /><Key frame="61" value="94.1309" /><Key frame="73" value="23.9062" /><Key frame="81" value="23.9062" /><Key frame="93" value="94.1309" /><Key frame="101" value="94.1309" /><Key frame="113" value="23.9062" /><Key frame="121" value="23.9062" /><Key frame="133" value="94.1309" /><Key frame="141" value="94.1309" /><Key frame="153" value="23.9062" /><Key frame="161" value="23.9062" /><Key frame="173" value="94.1309" /><Key frame="181" value="94.1309" /><Key frame="193" value="23.9062" /><Key frame="201" value="23.9062" /><Key frame="204" value="23.9062" /><Key frame="234" value="81.3867" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.0312" /><Key frame="41" value="-40.3" /><Key frame="53" value="-39.5508" /><Key frame="61" value="-39.5508" /><Key frame="73" value="-10.7227" /><Key frame="81" value="-10.7227" /><Key frame="93" value="-39.5508" /><Key frame="101" value="-39.5508" /><Key frame="113" value="-10.7227" /><Key frame="121" value="-10.7227" /><Key frame="133" value="-39.5508" /><Key frame="141" value="-39.5508" /><Key frame="153" value="-10.7227" /><Key frame="161" value="-10.7227" /><Key frame="173" value="-39.5508" /><Key frame="181" value="-39.5508" /><Key frame="193" value="-10.7227" /><Key frame="201" value="-10.7227" /><Key frame="204" value="-10.7227" /><Key frame="219" value="-40.9" /><Key frame="234" value="-52.0312" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.4499" /><Key frame="53" value="49.3097" /><Key frame="61" value="49.3097" /><Key frame="73" value="6.50159" /><Key frame="81" value="6.50159" /><Key frame="93" value="49.3097" /><Key frame="101" value="49.3097" /><Key frame="113" value="6.50159" /><Key frame="121" value="6.50159" /><Key frame="133" value="49.3097" /><Key frame="141" value="49.3097" /><Key frame="153" value="6.50159" /><Key frame="161" value="6.50159" /><Key frame="173" value="49.3097" /><Key frame="181" value="49.3097" /><Key frame="193" value="6.50159" /><Key frame="201" value="6.50159" /><Key frame="204" value="6.50159" /><Key frame="234" value="87.0983" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_モンキーダンス" id="173" localization="8" tooltip="Enter tooltip here" x="702" y="544"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="30" start_frame="1" end_frame="235" size="235"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="20" value="-11.7774" /><Key frame="43" value="-11" /><Key frame="47" value="0" /><Key frame="51" value="-11" /><Key frame="68" value="-11" /><Key frame="72" value="-2" /><Key frame="76" value="-11" /><Key frame="93" value="-11" /><Key frame="97" value="-2" /><Key frame="101" value="-11" /><Key frame="118" value="-11" /><Key frame="122" value="-2" /><Key frame="126" value="-11" /><Key frame="142" value="-11" /><Key frame="146" value="-2" /><Key frame="150" value="-11" /><Key frame="167" value="-11" /><Key frame="171" value="-2" /><Key frame="175" value="-11" /><Key frame="192" value="-11" /><Key frame="196" value="-2" /><Key frame="200" value="-11" /><Key frame="205" value="-11" /><Key frame="235" value="-11.7774" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="20" value="0.175782" /><Key frame="43" value="0" /><Key frame="47" value="0" /><Key frame="51" value="0" /><Key frame="68" value="0" /><Key frame="72" value="0" /><Key frame="76" value="0" /><Key frame="93" value="0" /><Key frame="97" value="0" /><Key frame="101" value="0" /><Key frame="118" value="0" /><Key frame="122" value="0" /><Key frame="126" value="0" /><Key frame="142" value="0" /><Key frame="146" value="0" /><Key frame="150" value="0" /><Key frame="167" value="0" /><Key frame="171" value="0" /><Key frame="175" value="0" /><Key frame="192" value="0" /><Key frame="196" value="0" /><Key frame="200" value="0" /><Key frame="205" value="0" /><Key frame="235" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="20" value="-0.351564" /><Key frame="50" value="0" /><Key frame="67" value="0" /><Key frame="75" value="0" /><Key frame="92" value="0" /><Key frame="100" value="0" /><Key frame="117" value="0" /><Key frame="125" value="0" /><Key frame="142" value="0" /><Key frame="150" value="0" /><Key frame="167" value="0" /><Key frame="175" value="0" /><Key frame="192" value="0" /><Key frame="200" value="0" /><Key frame="205" value="0" /><Key frame="235" value="-0.351564" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-29.7949" /><Key frame="50" value="-0.5" /><Key frame="67" value="-64.5117" /><Key frame="75" value="-64.5117" /><Key frame="92" value="-0.5" /><Key frame="100" value="-0.5" /><Key frame="117" value="-64.5117" /><Key frame="125" value="-64.5117" /><Key frame="142" value="-0.5" /><Key frame="150" value="-0.5" /><Key frame="167" value="-64.5117" /><Key frame="175" value="-64.5117" /><Key frame="192" value="-0.5" /><Key frame="200" value="-0.5" /><Key frame="205" value="-0.5" /><Key frame="235" value="-29.7949" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-70.3125" /><Key frame="50" value="-69.8" /><Key frame="67" value="-83.2" /><Key frame="75" value="-83.2" /><Key frame="92" value="-69.8" /><Key frame="100" value="-69.8" /><Key frame="117" value="-83.2" /><Key frame="125" value="-83.2" /><Key frame="142" value="-69.8" /><Key frame="150" value="-69.8" /><Key frame="167" value="-83.2" /><Key frame="175" value="-83.2" /><Key frame="192" value="-69.8" /><Key frame="200" value="-69.8" /><Key frame="205" value="-69.8" /><Key frame="235" value="-70.3125" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.580844" /><Key frame="50" value="0.0228471" /><Key frame="67" value="0.0228471" /><Key frame="75" value="0.0228471" /><Key frame="92" value="0.0228471" /><Key frame="100" value="0.0228471" /><Key frame="117" value="0.0228471" /><Key frame="125" value="0.0228471" /><Key frame="142" value="0.0228471" /><Key frame="150" value="0.0228471" /><Key frame="167" value="0.0228471" /><Key frame="175" value="0.0228471" /><Key frame="192" value="0.0228471" /><Key frame="200" value="0.0228471" /><Key frame="205" value="0.0228471" /><Key frame="235" value="0.580844" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="88.6816" /><Key frame="50" value="45.1" /><Key frame="67" value="-1.9336" /><Key frame="75" value="-1.9336" /><Key frame="92" value="45.1" /><Key frame="100" value="45.1" /><Key frame="117" value="-1.9336" /><Key frame="125" value="-1.9336" /><Key frame="142" value="45.1" /><Key frame="150" value="45.1" /><Key frame="167" value="-1.9336" /><Key frame="175" value="-1.9336" /><Key frame="192" value="45.1" /><Key frame="200" value="45.1" /><Key frame="205" value="45.1" /><Key frame="235" value="88.6816" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="7.55859" /><Key frame="50" value="1.23047" /><Key frame="67" value="1.23047" /><Key frame="75" value="1.23047" /><Key frame="92" value="1.23047" /><Key frame="100" value="1.23047" /><Key frame="117" value="1.23047" /><Key frame="125" value="1.23047" /><Key frame="142" value="1.23047" /><Key frame="150" value="1.23047" /><Key frame="167" value="1.23047" /><Key frame="175" value="1.23047" /><Key frame="192" value="1.23047" /><Key frame="200" value="1.23047" /><Key frame="205" value="1.23047" /><Key frame="235" value="7.55859" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="-0.969218" /><Key frame="50" value="-19.2" /><Key frame="67" value="-26.7167" /><Key frame="75" value="-26.7167" /><Key frame="92" value="-19.2" /><Key frame="100" value="-19.2" /><Key frame="117" value="-26.7167" /><Key frame="125" value="-26.7167" /><Key frame="142" value="-19.2" /><Key frame="150" value="-19.2" /><Key frame="167" value="-26.7167" /><Key frame="175" value="-26.7167" /><Key frame="192" value="-19.2" /><Key frame="200" value="-19.2" /><Key frame="205" value="-19.2" /><Key frame="235" value="-0.969218" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="20" value="29.5313" /><Key frame="50" value="64.5117" /><Key frame="67" value="0.5" /><Key frame="75" value="0.5" /><Key frame="92" value="64.5117" /><Key frame="100" value="64.5117" /><Key frame="117" value="0.5" /><Key frame="125" value="0.5" /><Key frame="142" value="64.5117" /><Key frame="150" value="64.5117" /><Key frame="167" value="0.5" /><Key frame="175" value="0.5" /><Key frame="192" value="64.5117" /><Key frame="200" value="64.5117" /><Key frame="205" value="64.5117" /><Key frame="235" value="29.5313" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="20" value="70.752" /><Key frame="50" value="83.2" /><Key frame="67" value="69.8" /><Key frame="75" value="69.8" /><Key frame="92" value="83.2" /><Key frame="100" value="83.2" /><Key frame="117" value="69.8" /><Key frame="125" value="69.8" /><Key frame="142" value="83.2" /><Key frame="150" value="83.2" /><Key frame="167" value="69.8" /><Key frame="175" value="69.8" /><Key frame="192" value="83.2" /><Key frame="200" value="83.2" /><Key frame="205" value="83.2" /><Key frame="235" value="70.752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="20" value="0.585237" /><Key frame="50" value="0.0228471" /><Key frame="67" value="0.0228471" /><Key frame="75" value="0.0228471" /><Key frame="92" value="0.0228471" /><Key frame="100" value="0.0228471" /><Key frame="117" value="0.0228471" /><Key frame="125" value="0.0228471" /><Key frame="142" value="0.0228471" /><Key frame="150" value="0.0228471" /><Key frame="167" value="0.0228471" /><Key frame="175" value="0.0228471" /><Key frame="192" value="0.0228471" /><Key frame="200" value="0.0228471" /><Key frame="205" value="0.0228471" /><Key frame="235" value="0.585237" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="20" value="89.209" /><Key frame="50" value="-1.9336" /><Key frame="67" value="45.1" /><Key frame="75" value="45.1" /><Key frame="92" value="-1.9336" /><Key frame="100" value="-1.9336" /><Key frame="117" value="45.1" /><Key frame="125" value="45.1" /><Key frame="142" value="-1.9336" /><Key frame="150" value="-1.9336" /><Key frame="167" value="45.1" /><Key frame="175" value="45.1" /><Key frame="192" value="-1.9336" /><Key frame="200" value="-1.9336" /><Key frame="205" value="-1.9336" /><Key frame="235" value="89.209" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="20" value="-7.91015" /><Key frame="50" value="-1.23047" /><Key frame="67" value="-1.23047" /><Key frame="75" value="-1.23047" /><Key frame="92" value="-1.23047" /><Key frame="100" value="-1.23047" /><Key frame="117" value="-1.23047" /><Key frame="125" value="-1.23047" /><Key frame="142" value="-1.23047" /><Key frame="150" value="-1.23047" /><Key frame="167" value="-1.23047" /><Key frame="175" value="-1.23047" /><Key frame="192" value="-1.23047" /><Key frame="200" value="-1.23047" /><Key frame="205" value="-1.23047" /><Key frame="235" value="-7.91015" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="20" value="1.40386" /><Key frame="50" value="26.7167" /><Key frame="67" value="19.2" /><Key frame="75" value="19.2" /><Key frame="92" value="26.7167" /><Key frame="100" value="26.7167" /><Key frame="117" value="19.2" /><Key frame="125" value="19.2" /><Key frame="142" value="26.7167" /><Key frame="150" value="26.7167" /><Key frame="167" value="19.2" /><Key frame="175" value="19.2" /><Key frame="192" value="26.7167" /><Key frame="200" value="26.7167" /><Key frame="205" value="26.7167" /><Key frame="235" value="1.40386" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-1.84571" /><Key frame="235" value="-1.84571" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="0.0878909" /><Key frame="235" value="0.0878909" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_刀を振って鞘に納める" id="3" localization="8" tooltip="Enter tooltip here" x="330" y="453"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="355" size="355"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.1621" /><Key frame="60" value="-11.4258" /><Key frame="74" value="-11.4258" /><Key frame="86" value="-11.8652" /><Key frame="97" value="-11.8652" /><Key frame="118" value="-11.6016" /><Key frame="130" value="-11.6895" /><Key frame="145" value="-12.3926" /><Key frame="162" value="-12.041" /><Key frame="178" value="-11.4258" /><Key frame="189" value="-11.8652" /><Key frame="222" value="-11.5137" /><Key frame="236" value="-11.5137" /><Key frame="261" value="-11.9531" /><Key frame="269" value="-11.9531" /><Key frame="271" value="-11.9531" /><Key frame="296" value="-11.9531" /><Key frame="326" value="-11.4591" /><Key frame="355" value="-11.1621" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0" /><Key frame="60" value="-37.7" /><Key frame="74" value="-37.7" /><Key frame="86" value="-37.3535" /><Key frame="97" value="-37.3535" /><Key frame="118" value="-37.5293" /><Key frame="130" value="-37.2656" /><Key frame="145" value="-37.0898" /><Key frame="162" value="-37.4414" /><Key frame="178" value="-37.3535" /><Key frame="189" value="-37.3535" /><Key frame="222" value="-37.2656" /><Key frame="236" value="-37.2656" /><Key frame="261" value="-37.4414" /><Key frame="269" value="-37.4414" /><Key frame="271" value="-37.4414" /><Key frame="296" value="-37.4414" /><Key frame="326" value="0" /><Key frame="355" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.66993" /><Key frame="60" value="-1.84571" /><Key frame="74" value="-1.84571" /><Key frame="86" value="-1.84571" /><Key frame="97" value="-1.84571" /><Key frame="118" value="-1.84571" /><Key frame="130" value="-1.84571" /><Key frame="145" value="-1.84571" /><Key frame="162" value="-1.84571" /><Key frame="178" value="-1.84571" /><Key frame="189" value="-1.84571" /><Key frame="222" value="-1.84571" /><Key frame="236" value="-1.84571" /><Key frame="261" value="-1.84571" /><Key frame="269" value="-1.84571" /><Key frame="271" value="-1.84571" /><Key frame="296" value="-1.84571" /><Key frame="326" value="-1.84571" /><Key frame="355" value="-1.66993" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.703127" /><Key frame="60" value="-0.351564" /><Key frame="74" value="-0.351564" /><Key frame="86" value="-0.351564" /><Key frame="97" value="-0.351564" /><Key frame="118" value="-0.351564" /><Key frame="130" value="-0.351564" /><Key frame="145" value="-0.351564" /><Key frame="162" value="-0.351564" /><Key frame="178" value="-0.351564" /><Key frame="189" value="-0.351564" /><Key frame="222" value="-0.351564" /><Key frame="236" value="-0.351564" /><Key frame="261" value="-0.351564" /><Key frame="269" value="-0.351564" /><Key frame="271" value="-0.351564" /><Key frame="296" value="-0.351564" /><Key frame="326" value="-0.351564" /><Key frame="355" value="-0.703127" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.527345" /><Key frame="60" value="0" /><Key frame="74" value="0" /><Key frame="86" value="0" /><Key frame="97" value="0" /><Key frame="118" value="0" /><Key frame="130" value="0" /><Key frame="145" value="0" /><Key frame="162" value="0" /><Key frame="178" value="0" /><Key frame="189" value="0" /><Key frame="222" value="0" /><Key frame="236" value="0" /><Key frame="261" value="0" /><Key frame="269" value="0" /><Key frame="271" value="0" /><Key frame="296" value="0" /><Key frame="326" value="0" /><Key frame="355" value="-0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.375" /><Key frame="65" value="-84.6388" /><Key frame="86" value="-84.6388" /><Key frame="97" value="-84.6388" /><Key frame="118" value="-66.3574" /><Key frame="130" value="-55.9863" /><Key frame="145" value="-73.5645" /><Key frame="162" value="-73.5645" /><Key frame="178" value="-84.6388" /><Key frame="189" value="-67.8516" /><Key frame="222" value="-67.8516" /><Key frame="236" value="-67.8516" /><Key frame="261" value="-84.375" /><Key frame="269" value="-84.375" /><Key frame="271" value="-84.6388" /><Key frame="296" value="-84.6388" /><Key frame="326" value="-84.6388" /><Key frame="355" value="-84.375" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-6.06446" /><Key frame="65" value="-6.20701" /><Key frame="86" value="-6.20701" /><Key frame="97" value="-6.20701" /><Key frame="118" value="-42.1875" /><Key frame="130" value="-41.3086" /><Key frame="145" value="-30.1465" /><Key frame="162" value="-30.1465" /><Key frame="178" value="-6.20701" /><Key frame="189" value="-30.4102" /><Key frame="222" value="-30.4102" /><Key frame="236" value="-30.4102" /><Key frame="261" value="-6.32813" /><Key frame="269" value="-6.32813" /><Key frame="271" value="-6.20701" /><Key frame="296" value="-6.20701" /><Key frame="326" value="-6.20701" /><Key frame="355" value="-6.06446" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.043058" /><Key frame="65" value="0" /><Key frame="86" value="0" /><Key frame="97" value="0" /><Key frame="118" value="0.0869948" /><Key frame="130" value="0.0755712" /><Key frame="162" value="0.0755712" /><Key frame="178" value="0.0755712" /><Key frame="189" value="0.0887522" /><Key frame="222" value="0.0887522" /><Key frame="236" value="0.0887522" /><Key frame="261" value="0.0316344" /><Key frame="269" value="0.0316344" /><Key frame="271" value="0" /><Key frame="296" value="0" /><Key frame="326" value="0" /><Key frame="355" value="0.043058" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.8594" /><Key frame="65" value="81.2851" /><Key frame="86" value="81.2851" /><Key frame="97" value="81.2851" /><Key frame="118" value="83.0566" /><Key frame="130" value="84.7266" /><Key frame="145" value="91.4941" /><Key frame="162" value="91.4941" /><Key frame="178" value="81.2851" /><Key frame="189" value="91.1426" /><Key frame="222" value="91.1426" /><Key frame="236" value="91.1426" /><Key frame="261" value="82.0898" /><Key frame="269" value="82.0898" /><Key frame="271" value="81.2851" /><Key frame="296" value="81.2851" /><Key frame="326" value="81.2851" /><Key frame="355" value="80.8594" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="52.0312" /><Key frame="65" value="52" /><Key frame="86" value="52" /><Key frame="97" value="52" /><Key frame="118" value="25.1367" /><Key frame="130" value="24.1699" /><Key frame="145" value="43.5059" /><Key frame="162" value="43.5059" /><Key frame="178" value="52" /><Key frame="189" value="43.6816" /><Key frame="222" value="43.6816" /><Key frame="236" value="43.6816" /><Key frame="261" value="52.0312" /><Key frame="269" value="52.0312" /><Key frame="271" value="52" /><Key frame="296" value="52" /><Key frame="326" value="52" /><Key frame="355" value="52.0312" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-87.191" /><Key frame="65" value="-88.6804" /><Key frame="86" value="-88.6804" /><Key frame="97" value="-88.6804" /><Key frame="118" value="9.48991" /><Key frame="130" value="-15.4" /><Key frame="145" value="-13.6" /><Key frame="162" value="-13.6" /><Key frame="178" value="-15.4" /><Key frame="189" value="-12.3951" /><Key frame="222" value="-12.3951" /><Key frame="236" value="-12.3951" /><Key frame="261" value="-86.4879" /><Key frame="269" value="-86.4879" /><Key frame="271" value="-88.6804" /><Key frame="296" value="-88.6804" /><Key frame="326" value="-88.6804" /><Key frame="355" value="-87.191" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="84.1113" /><Key frame="60" value="59.3262" /><Key frame="74" value="59.3262" /><Key frame="86" value="48.6914" /><Key frame="97" value="56.8652" /><Key frame="118" value="74" /><Key frame="130" value="40.7813" /><Key frame="145" value="71.1914" /><Key frame="162" value="1.49414" /><Key frame="178" value="49.3945" /><Key frame="189" value="40.7813" /><Key frame="222" value="18.1934" /><Key frame="236" value="18.1934" /><Key frame="261" value="52.7344" /><Key frame="269" value="52.7344" /><Key frame="271" value="59.3262" /><Key frame="296" value="59.3262" /><Key frame="326" value="59.3262" /><Key frame="355" value="84.1113" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.67969" /><Key frame="60" value="14.502" /><Key frame="74" value="14.502" /><Key frame="86" value="88.5938" /><Key frame="97" value="119.5" /><Key frame="118" value="119.004" /><Key frame="130" value="104.15" /><Key frame="145" value="40.0781" /><Key frame="162" value="47.9004" /><Key frame="178" value="119.18" /><Key frame="189" value="104.062" /><Key frame="222" value="104.414" /><Key frame="236" value="104.414" /><Key frame="261" value="15.9082" /><Key frame="269" value="15.9082" /><Key frame="271" value="14.502" /><Key frame="296" value="14.502" /><Key frame="326" value="14.502" /><Key frame="355" value="6.67969" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0404218" /><Key frame="60" value="0.0448154" /><Key frame="74" value="0.0448154" /><Key frame="86" value="0.372584" /><Key frame="97" value="0.372584" /><Key frame="118" value="0.36819" /><Key frame="130" value="0.369069" /><Key frame="145" value="0.0456942" /><Key frame="162" value="0.308436" /><Key frame="178" value="0.369947" /><Key frame="189" value="0.363796" /><Key frame="222" value="0.369069" /><Key frame="236" value="0.369069" /><Key frame="261" value="0.0298769" /><Key frame="269" value="0.0298769" /><Key frame="271" value="0.0448154" /><Key frame="296" value="0.0448154" /><Key frame="326" value="0.0448154" /><Key frame="355" value="0.0404218" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.0352" /><Key frame="60" value="55.1953" /><Key frame="74" value="55.1953" /><Key frame="86" value="51.5918" /><Key frame="97" value="47.1094" /><Key frame="118" value="-1.9336" /><Key frame="130" value="29.0039" /><Key frame="145" value="-5.00977" /><Key frame="162" value="57.9199" /><Key frame="178" value="-2.02149" /><Key frame="189" value="29.9707" /><Key frame="222" value="48.9551" /><Key frame="236" value="48.9551" /><Key frame="261" value="47.7246" /><Key frame="269" value="47.7246" /><Key frame="271" value="55.1953" /><Key frame="296" value="55.1953" /><Key frame="326" value="55.1953" /><Key frame="355" value="81.0352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.0312" /><Key frame="60" value="-8.34961" /><Key frame="74" value="-8.34961" /><Key frame="86" value="-26.0156" /><Key frame="97" value="-37.7051" /><Key frame="118" value="-88.9453" /><Key frame="130" value="-35.8594" /><Key frame="145" value="-32.6074" /><Key frame="162" value="-46.4941" /><Key frame="178" value="-88.7695" /><Key frame="189" value="-35.1563" /><Key frame="222" value="-0.5" /><Key frame="236" value="-0.5" /><Key frame="261" value="-17.1387" /><Key frame="269" value="-17.1387" /><Key frame="271" value="-8.34961" /><Key frame="296" value="-8.34961" /><Key frame="326" value="-8.34961" /><Key frame="355" value="-52.0312" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.8893" /><Key frame="60" value="-47.1124" /><Key frame="74" value="-47.1124" /><Key frame="86" value="-38.0595" /><Key frame="97" value="-2.11181" /><Key frame="118" value="65.9164" /><Key frame="130" value="15.4" /><Key frame="145" value="0.9" /><Key frame="162" value="13.6" /><Key frame="178" value="66.8832" /><Key frame="189" value="50.008" /><Key frame="222" value="3.95273" /><Key frame="236" value="3.95273" /><Key frame="261" value="-51.7706" /><Key frame="269" value="-51.7706" /><Key frame="271" value="-47.1124" /><Key frame="296" value="-47.1124" /><Key frame="326" value="-47.1124" /><Key frame="355" value="87.8893" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_両手を腰にあてて、ドヤポーズ" id="192" localization="8" tooltip="Enter tooltip here" x="540" y="527"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="104" size="104"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-10.9863" /><Key frame="60" value="-30" /><Key frame="80" value="-30" /><Key frame="100" value="-10.9863" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0.175782" /><Key frame="60" value="-4.70003e-21" /><Key frame="100" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.31836" /><Key frame="60" value="-1.31836" /><Key frame="80" value="-1.31836" /><Key frame="100" value="-1.31836" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.0878909" /><Key frame="60" value="-0.0878909" /><Key frame="80" value="-0.0878909" /><Key frame="100" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.439454" /><Key frame="60" value="-0.439454" /><Key frame="80" value="-0.439454" /><Key frame="100" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.5508" /><Key frame="60" value="-84.6388" /><Key frame="80" value="-84.6388" /><Key frame="100" value="-84.5508" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-6.15235" /><Key frame="60" value="-6.20701" /><Key frame="80" value="-6.20701" /><Key frame="100" value="-6.15235" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.043058" /><Key frame="60" value="0" /><Key frame="80" value="0" /><Key frame="100" value="0.043058" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.9473" /><Key frame="60" value="81.2851" /><Key frame="80" value="81.2851" /><Key frame="100" value="80.9473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="52.1191" /><Key frame="60" value="52" /><Key frame="80" value="52" /><Key frame="100" value="52.1191" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.9273" /><Key frame="60" value="-88.6804" /><Key frame="80" value="-88.6804" /><Key frame="100" value="-86.9273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="84.1992" /><Key frame="60" value="84.6388" /><Key frame="80" value="84.6388" /><Key frame="100" value="84.1992" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.76758" /><Key frame="60" value="6.20701" /><Key frame="80" value="6.20701" /><Key frame="100" value="6.76758" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0448154" /><Key frame="60" value="0" /><Key frame="80" value="0" /><Key frame="100" value="0.0448154" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.9473" /><Key frame="60" value="81.2851" /><Key frame="80" value="81.2851" /><Key frame="100" value="80.9473" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-51.8555" /><Key frame="60" value="-52" /><Key frame="80" value="-52" /><Key frame="100" value="-51.8555" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.2741" /><Key frame="60" value="88.6804" /><Key frame="80" value="88.6804" /><Key frame="100" value="87.2741" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_右手をあげて、腕自慢" id="85" localization="8" tooltip="Enter tooltip here" x="496" y="736"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="124" size="124"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.8652" /><Key frame="55" value="-9.49471" /><Key frame="70" value="-9.49471" /><Key frame="77" value="-9.49471" /><Key frame="85" value="-9.49471" /><Key frame="90" value="-9.49471" /><Key frame="120" value="-11.6895" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0.175782" /><Key frame="55" value="0.173378" /><Key frame="70" value="0.173378" /><Key frame="77" value="0.173378" /><Key frame="85" value="0.173378" /><Key frame="90" value="0.173378" /><Key frame="120" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.375" /><Key frame="42" value="-84.375" /><Key frame="55" value="-83.4947" /><Key frame="85" value="-83.4947" /><Key frame="90" value="-83.4947" /><Key frame="107" value="-84.375" /><Key frame="120" value="-84.5508" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-7.03126" /><Key frame="42" value="-7.03126" /><Key frame="55" value="-7.64898" /><Key frame="85" value="-7.64898" /><Key frame="90" value="-7.64898" /><Key frame="107" value="-7.03126" /><Key frame="120" value="-7.29493" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.043058" /><Key frame="42" value="0.043058" /><Key frame="55" value="0.0216" /><Key frame="85" value="0.0216" /><Key frame="90" value="0.0216" /><Key frame="107" value="0.043058" /><Key frame="120" value="0.043058" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.5625" /><Key frame="42" value="81.5625" /><Key frame="55" value="77.9576" /><Key frame="85" value="77.9576" /><Key frame="90" value="77.9576" /><Key frame="107" value="81.5625" /><Key frame="120" value="81.2109" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.5039" /><Key frame="42" value="51.5039" /><Key frame="55" value="50.008" /><Key frame="85" value="50.008" /><Key frame="90" value="50.008" /><Key frame="107" value="51.5039" /><Key frame="120" value="51.6797" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-85.6968" /><Key frame="42" value="-85.6968" /><Key frame="55" value="-87.191" /><Key frame="85" value="-87.191" /><Key frame="90" value="-87.191" /><Key frame="107" value="-85.6968" /><Key frame="120" value="-86.9273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="83.7598" /><Key frame="55" value="50.7159" /><Key frame="70" value="88.5" /><Key frame="85" value="50.7159" /><Key frame="90" value="50.7159" /><Key frame="120" value="84.0234" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.06446" /><Key frame="55" value="105.292" /><Key frame="63" value="119.5" /><Key frame="70" value="96.6" /><Key frame="77" value="73.6" /><Key frame="85" value="105.292" /><Key frame="90" value="105.292" /><Key frame="120" value="6.32813" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.033392" /><Key frame="55" value="0.0224" /><Key frame="85" value="0.0224" /><Key frame="90" value="0.0224" /><Key frame="120" value="0.033392" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.5625" /><Key frame="55" value="6.3306" /><Key frame="85" value="6.3306" /><Key frame="90" value="6.3306" /><Key frame="120" value="81.0352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-51.7676" /><Key frame="42" value="-35" /><Key frame="55" value="-0.5" /><Key frame="70" value="-15.8" /><Key frame="85" value="-0.5" /><Key frame="90" value="-0.5" /><Key frame="107" value="-35.9" /><Key frame="120" value="-51.8555" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.362" /><Key frame="55" value="87.362" /><Key frame="85" value="87.362" /><Key frame="90" value="87.362" /><Key frame="120" value="87.5378" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.23047" /><Key frame="120" value="-1.23047" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.0878909" /><Key frame="120" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.0878909" /><Key frame="120" value="-0.615236" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_両手をあげて、フリフリ" id="78" localization="8" tooltip="宇宙人&#x0A;" x="507" y="110"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="167"><ActuatorList model=""><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.14258" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.6387" /><Key frame="60" value="-84.6388" /><Key frame="97" value="-89.5" /><Key frame="102" value="-89.5" /><Key frame="107" value="-89.5" /><Key frame="112" value="-89.5" /><Key frame="117" value="-89.5" /><Key frame="122" value="-89.5" /><Key frame="127" value="-89.5" /><Key frame="132" value="-89.5" /><Key frame="137" value="-89.5" /><Key frame="142" value="-89.5" /><Key frame="147" value="-89.5" /><Key frame="152" value="-89.5" /><Key frame="157" value="-89.5" /><Key frame="162" value="-89.5" /><Key frame="167" value="-89.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-7.4707" /><Key frame="60" value="-6.20701" /><Key frame="97" value="-6.20705" /><Key frame="102" value="-6.20705" /><Key frame="107" value="-6.20705" /><Key frame="112" value="-6.20705" /><Key frame="117" value="-6.20705" /><Key frame="122" value="-6.20705" /><Key frame="127" value="-6.20705" /><Key frame="132" value="-6.20705" /><Key frame="137" value="-6.20705" /><Key frame="142" value="-6.20705" /><Key frame="147" value="-6.20705" /><Key frame="152" value="-6.20705" /><Key frame="157" value="-6.20705" /><Key frame="162" value="-6.20705" /><Key frame="167" value="-6.20705" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0377855" /><Key frame="60" value="0" /><Key frame="97" value="0" /><Key frame="102" value="0.81" /><Key frame="107" value="0.81" /><Key frame="112" value="0.81" /><Key frame="117" value="0.81" /><Key frame="122" value="0.81" /><Key frame="127" value="0.81" /><Key frame="132" value="0.81" /><Key frame="137" value="0.81" /><Key frame="142" value="0.81" /><Key frame="147" value="0.81" /><Key frame="152" value="0.81" /><Key frame="157" value="0.81" /><Key frame="162" value="0.81" /><Key frame="167" value="0.81" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.1231" /><Key frame="60" value="81.2851" /><Key frame="90" value="-85.2" /><Key frame="97" value="-85.2" /><Key frame="102" value="-85.2" /><Key frame="107" value="-85.2" /><Key frame="112" value="-85.2" /><Key frame="117" value="-85.2" /><Key frame="122" value="-85.2" /><Key frame="127" value="-85.2" /><Key frame="132" value="-85.2" /><Key frame="137" value="-85.2" /><Key frame="142" value="-85.2" /><Key frame="147" value="-85.2" /><Key frame="152" value="-85.2" /><Key frame="157" value="-85.2" /><Key frame="162" value="-85.2" /><Key frame="167" value="-85.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.6797" /><Key frame="60" value="52" /><Key frame="97" value="89.5" /><Key frame="102" value="89.5" /><Key frame="107" value="89.5" /><Key frame="112" value="89.5" /><Key frame="117" value="89.5" /><Key frame="122" value="89.5" /><Key frame="127" value="89.5" /><Key frame="132" value="89.5" /><Key frame="137" value="89.5" /><Key frame="142" value="89.5" /><Key frame="147" value="89.5" /><Key frame="152" value="89.5" /><Key frame="157" value="89.5" /><Key frame="162" value="89.5" /><Key frame="167" value="89.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.8394" /><Key frame="60" value="-88.6804" /><Key frame="97" value="-88.6804" /><Key frame="102" value="-88.6804" /><Key frame="107" value="22.6" /><Key frame="112" value="-88.6804" /><Key frame="117" value="22.6" /><Key frame="122" value="-88.6804" /><Key frame="127" value="22.6" /><Key frame="132" value="-88.6804" /><Key frame="137" value="22.6" /><Key frame="142" value="-88.6804" /><Key frame="147" value="22.6" /><Key frame="152" value="-88.6804" /><Key frame="157" value="22.6" /><Key frame="162" value="-88.6804" /><Key frame="167" value="-88.6804" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="84.0234" /><Key frame="60" value="84.6388" /><Key frame="97" value="89.5" /><Key frame="102" value="89.5" /><Key frame="107" value="89.5" /><Key frame="112" value="89.5" /><Key frame="117" value="89.5" /><Key frame="122" value="89.5" /><Key frame="127" value="89.5" /><Key frame="132" value="89.5" /><Key frame="137" value="89.5" /><Key frame="142" value="89.5" /><Key frame="147" value="89.5" /><Key frame="152" value="89.5" /><Key frame="157" value="89.5" /><Key frame="162" value="89.5" /><Key frame="167" value="89.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.06446" /><Key frame="60" value="6.20701" /><Key frame="97" value="6.20705" /><Key frame="102" value="6.20705" /><Key frame="107" value="6.20705" /><Key frame="112" value="6.20705" /><Key frame="117" value="6.20705" /><Key frame="122" value="6.20705" /><Key frame="127" value="6.20705" /><Key frame="132" value="6.20705" /><Key frame="137" value="6.20705" /><Key frame="142" value="6.20705" /><Key frame="147" value="6.20705" /><Key frame="152" value="6.20705" /><Key frame="157" value="6.20705" /><Key frame="162" value="6.20705" /><Key frame="167" value="6.20705" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0325131" /><Key frame="60" value="0" /><Key frame="97" value="0" /><Key frame="102" value="0.81" /><Key frame="107" value="0.81" /><Key frame="112" value="0.81" /><Key frame="117" value="0.81" /><Key frame="122" value="0.81" /><Key frame="127" value="0.81" /><Key frame="132" value="0.81" /><Key frame="137" value="0.81" /><Key frame="142" value="0.81" /><Key frame="147" value="0.81" /><Key frame="152" value="0.81" /><Key frame="157" value="0.81" /><Key frame="162" value="0.81" /><Key frame="167" value="0.81" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.0352" /><Key frame="60" value="81.2851" /><Key frame="90" value="-85.2" /><Key frame="97" value="-85.2" /><Key frame="102" value="-85.2" /><Key frame="107" value="-85.2" /><Key frame="112" value="-85.2" /><Key frame="117" value="-85.2" /><Key frame="122" value="-85.2" /><Key frame="127" value="-85.2" /><Key frame="132" value="-85.2" /><Key frame="137" value="-85.2" /><Key frame="142" value="-85.2" /><Key frame="147" value="-85.2" /><Key frame="152" value="-85.2" /><Key frame="157" value="-85.2" /><Key frame="162" value="-85.2" /><Key frame="167" value="-85.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.0312" /><Key frame="60" value="-52" /><Key frame="97" value="-89.5" /><Key frame="102" value="-89.5" /><Key frame="107" value="-89.5" /><Key frame="112" value="-89.5" /><Key frame="117" value="-89.5" /><Key frame="122" value="-89.5" /><Key frame="127" value="-89.5" /><Key frame="132" value="-89.5" /><Key frame="137" value="-89.5" /><Key frame="142" value="-89.5" /><Key frame="147" value="-89.5" /><Key frame="152" value="-89.5" /><Key frame="157" value="-89.5" /><Key frame="162" value="-89.5" /><Key frame="167" value="-89.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.4499" /><Key frame="60" value="88.6804" /><Key frame="97" value="88.6804" /><Key frame="102" value="88.6804" /><Key frame="107" value="-22.6" /><Key frame="112" value="88.6804" /><Key frame="117" value="-22.6" /><Key frame="122" value="88.6804" /><Key frame="127" value="-22.6" /><Key frame="132" value="88.6804" /><Key frame="137" value="-22.6" /><Key frame="142" value="88.6804" /><Key frame="147" value="-22.6" /><Key frame="152" value="88.6804" /><Key frame="157" value="-22.6" /><Key frame="162" value="88.6804" /><Key frame="167" value="88.6804" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.6016" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0.175782" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="n_右手を頭まであげてガッツポーズ" id="15" localization="8" tooltip="Enter tooltip here" x="246" y="480"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Timeline enable="1" fps="25" start_frame="1" end_frame="160" size="160"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Say" id="9" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="208" y="126"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="120" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="336.359"><Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /></Box><Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="19" y="33"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " \\rspd=108\\\\vct=125\\それでは皆さん、\\vct=130\\連覇に向けて、\\vct=135\\一緒にがんばりましょう！ ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 ",
			"MandarinTaiwan" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]></content></script><pluginContent><arabic><![CDATA[]]></arabic><czech><![CDATA[Ahoj]]></czech><danish><![CDATA[Hej]]></danish><german><![CDATA[Hallo]]></german><greek><![CDATA[]]></greek><english><![CDATA[Hello]]></english><spanish><![CDATA[Hola]]></spanish><finnish><![CDATA[Hei]]></finnish><french><![CDATA[Bonjour]]></french><italian><![CDATA[Ciao]]></italian><japanese><![CDATA[\rspd=108\\vct=125\それでは皆さん、\vct=130\連覇に向けて、\vct=135\一緒にがんばりましょう！]]></japanese><korean><![CDATA[안녕하세요]]></korean><dutch><![CDATA[Hallo]]></dutch><norwegian><![CDATA[]]></norwegian><polish><![CDATA[Cześć]]></polish><brazilian><![CDATA[Olá]]></brazilian><portuguese><![CDATA[Olá]]></portuguese><russian><![CDATA[Привет]]></russian><swedish><![CDATA[Hallå]]></swedish><turkish><![CDATA[Merhaba]]></turkish><chinese><![CDATA[你好]]></chinese><mandarintaiwan><![CDATA[]]></mandarintaiwan><language>14</language></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Speech" type="Lock" timeout="0" /></Box></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="behavior_layer2"><BehaviorKeyframe name="keyframe120" index="120"><Diagram><Link inputowner="0" indexofinput="5" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-84.6388" /><Key frame="42" value="-84.584" /><Key frame="54" value="-84.375" /><Key frame="65" value="-84.5618" /><Key frame="120" value="-84.5618" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-6.20701" /><Key frame="42" value="-6.66447" /><Key frame="54" value="-6.32813" /><Key frame="65" value="-7.16499" /><Key frame="120" value="-7.16499" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0" /><Key frame="42" value="0.00454646" /><Key frame="54" value="0.0307558" /><Key frame="65" value="0.00434558" /><Key frame="120" value="0.00434558" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="81.2851" /><Key frame="42" value="81.0913" /><Key frame="54" value="80.8594" /><Key frame="65" value="80.9298" /><Key frame="120" value="80.9298" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="52" /><Key frame="42" value="52.0225" /><Key frame="54" value="52.4707" /><Key frame="65" value="51.8365" /><Key frame="120" value="51.8365" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="-88.6804" /><Key frame="42" value="-88.7579" /><Key frame="54" value="-88.1578" /><Key frame="65" value="-89.2505" /><Key frame="120" value="-89.2505" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="20" value="84.6388" /><Key frame="42" value="80.0046" /><Key frame="54" value="80.0684" /><Key frame="65" value="9.0856" /><Key frame="120" value="9.0856" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="20" value="6.20701" /><Key frame="42" value="73.4483" /><Key frame="54" value="36.2109" /><Key frame="65" value="10.6191" /><Key frame="120" value="10.6191" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="20" value="0" /><Key frame="42" value="0.00170221" /><Key frame="54" value="0.0281196" /><Key frame="65" value="0.00434558" /><Key frame="120" value="0.00434558" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="20" value="81.2851" /><Key frame="42" value="14.1168" /><Key frame="54" value="-36.2988" /><Key frame="65" value="-65.5959" /><Key frame="120" value="-65.5959" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="20" value="-52" /><Key frame="42" value="-43.3223" /><Key frame="54" value="-45" /><Key frame="65" value="-14.4521" /><Key frame="120" value="-14.4521" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="20" value="88.6804" /><Key frame="42" value="43.7765" /><Key frame="54" value="10.8962" /><Key frame="65" value="-3.22961" /><Key frame="120" value="-3.22961" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-2.29862" /><Key frame="42" value="-2.29862" /><Key frame="54" value="-1.84571" /><Key frame="65" value="-1.79251" /><Key frame="120" value="-1.79251" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="20" value="6.48662e-05" /><Key frame="42" value="6.48662e-05" /><Key frame="54" value="3.07617" /><Key frame="65" value="7.2295" /><Key frame="120" value="7.2295" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="-0.580292" /><Key frame="42" value="-0.580292" /><Key frame="54" value="-0.527345" /><Key frame="65" value="-0.611169" /><Key frame="120" value="-0.611169" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_右手を胸まであげて、ガッツポーズ" id="4" localization="8" tooltip="Enter tooltip here" x="509" y="203"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="134" size="134"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.7774" /><Key frame="60" value="-20" /><Key frame="68" value="-20" /><Key frame="75" value="-5" /><Key frame="82" value="-20" /><Key frame="106" value="-20" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0" /><Key frame="60" value="0" /><Key frame="68" value="0" /><Key frame="75" value="0" /><Key frame="82" value="0" /><Key frame="106" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.9336" /><Key frame="60" value="-10" /><Key frame="67" value="-10" /><Key frame="74" value="-10" /><Key frame="81" value="-10" /><Key frame="106" value="-10" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.175782" /><Key frame="60" value="-3.40445e-15" /><Key frame="67" value="-3.40445e-15" /><Key frame="74" value="-3.40445e-15" /><Key frame="81" value="-3.40445e-15" /><Key frame="106" value="-3.40445e-15" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.527345" /><Key frame="60" value="-3.99982" /><Key frame="67" value="-3.99982" /><Key frame="74" value="-3.99982" /><Key frame="81" value="-3.99982" /><Key frame="106" value="-3.99982" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.7266" /><Key frame="43" value="-84.7266" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-7.03126" /><Key frame="43" value="-7.03126" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0386643" /><Key frame="43" value="0.0386643" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.1231" /><Key frame="43" value="81.1231" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="52.1191" /><Key frame="43" value="52.1191" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.6637" /><Key frame="43" value="-86.6637" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="83.7598" /><Key frame="60" value="77.4" /><Key frame="67" value="77.4" /><Key frame="74" value="84.6421" /><Key frame="81" value="77.4" /><Key frame="106" value="77.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.41602" /><Key frame="60" value="97.9969" /><Key frame="67" value="97.9969" /><Key frame="74" value="98.7" /><Key frame="81" value="97.9969" /><Key frame="106" value="97.9969" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0316344" /><Key frame="60" value="0.02" /><Key frame="67" value="0.02" /><Key frame="74" value="0.0292" /><Key frame="81" value="0.02" /><Key frame="106" value="0.02" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.1562" /><Key frame="60" value="26.282" /><Key frame="67" value="26.282" /><Key frame="74" value="42.2" /><Key frame="81" value="26.282" /><Key frame="106" value="26.282" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.1191" /><Key frame="43" value="-45.6" /><Key frame="60" value="-0.5" /><Key frame="67" value="-0.5" /><Key frame="74" value="-0.5" /><Key frame="81" value="-0.5" /><Key frame="106" value="-0.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.5378" /><Key frame="60" value="25.3104" /><Key frame="67" value="25.3104" /><Key frame="74" value="25.662" /><Key frame="81" value="25.3104" /><Key frame="106" value="25.3104" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_左手を胸まであげて、ガッツポーズ" id="35" localization="8" tooltip="Enter tooltip here" x="514" y="302"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="134" size="134"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.7774" /><Key frame="60" value="-20" /><Key frame="68" value="-20" /><Key frame="75" value="-5" /><Key frame="82" value="-20" /><Key frame="106" value="-20" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="0" /><Key frame="60" value="0" /><Key frame="68" value="0" /><Key frame="75" value="0" /><Key frame="82" value="0" /><Key frame="106" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.9336" /><Key frame="60" value="-10" /><Key frame="67" value="-10" /><Key frame="74" value="-10" /><Key frame="81" value="-10" /><Key frame="106" value="-10" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="0.175782" /><Key frame="60" value="3.40445e-15" /><Key frame="67" value="3.40445e-15" /><Key frame="74" value="3.40445e-15" /><Key frame="81" value="3.40445e-15" /><Key frame="106" value="3.40445e-15" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.527345" /><Key frame="60" value="-3.99982" /><Key frame="67" value="-3.99982" /><Key frame="74" value="-3.99982" /><Key frame="81" value="-3.99982" /><Key frame="106" value="-3.99982" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-83.7598" /><Key frame="60" value="-77.4" /><Key frame="67" value="-77.4" /><Key frame="74" value="-84.6421" /><Key frame="81" value="-77.4" /><Key frame="106" value="-77.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-6.41602" /><Key frame="60" value="-97.9969" /><Key frame="67" value="-97.9969" /><Key frame="74" value="-98.7" /><Key frame="81" value="-97.9969" /><Key frame="106" value="-97.9969" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0316344" /><Key frame="60" value="0.02" /><Key frame="67" value="0.02" /><Key frame="74" value="0.0292" /><Key frame="81" value="0.02" /><Key frame="106" value="0.02" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.1562" /><Key frame="60" value="26.282" /><Key frame="67" value="26.282" /><Key frame="74" value="42.2" /><Key frame="81" value="26.282" /><Key frame="106" value="26.282" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="52.1191" /><Key frame="43" value="45.6" /><Key frame="60" value="0.5" /><Key frame="67" value="0.5" /><Key frame="74" value="0.5" /><Key frame="81" value="0.5" /><Key frame="106" value="0.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-87.5378" /><Key frame="60" value="-25.3104" /><Key frame="67" value="-25.3104" /><Key frame="74" value="-25.662" /><Key frame="81" value="-25.3104" /><Key frame="106" value="-25.3104" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="84.7266" /><Key frame="43" value="84.7266" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="7.03126" /><Key frame="43" value="7.03126" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0386643" /><Key frame="43" value="0.0386643" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.1231" /><Key frame="43" value="81.1231" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-52.1191" /><Key frame="43" value="-52.1191" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="86.6637" /><Key frame="43" value="86.6637" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="n_両手を腰にあてて、ガッツポーズ" id="230" localization="8" tooltip="Enter tooltip here" x="520" y="391"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る" id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="98" size="98"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="30" value="-11.4258" /><Key frame="50" value="-11.1" /><Key frame="53" value="-11.1" /><Key frame="58" value="8.5" /><Key frame="63" value="-11.1" /><Key frame="72" value="-11.1" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="30" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-1.49414" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="-0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="-0.351564" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="30" value="-84.8145" /><Key frame="50" value="-77.4" /><Key frame="52" value="-77.4" /><Key frame="57" value="-77.4" /><Key frame="62" value="-77.4" /><Key frame="72" value="-77.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="30" value="-6.67969" /><Key frame="50" value="-97.9969" /><Key frame="52" value="-97.9969" /><Key frame="57" value="-97.9969" /><Key frame="62" value="-97.9969" /><Key frame="72" value="-97.9969" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="30" value="0.0377855" /><Key frame="50" value="0.02" /><Key frame="52" value="0.02" /><Key frame="57" value="0.02" /><Key frame="62" value="0.02" /><Key frame="72" value="0.02" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="30" value="80.9473" /><Key frame="50" value="69.4" /><Key frame="52" value="69.4" /><Key frame="57" value="82.3" /><Key frame="62" value="69.4" /><Key frame="72" value="69.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="30" value="51.6797" /><Key frame="43" value="30.9" /><Key frame="50" value="0.5" /><Key frame="52" value="0.5" /><Key frame="57" value="0.5" /><Key frame="62" value="0.5" /><Key frame="72" value="0.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="30" value="-86.2242" /><Key frame="50" value="-25.3104" /><Key frame="52" value="-25.3104" /><Key frame="57" value="-25.3104" /><Key frame="62" value="-25.3104" /><Key frame="72" value="-25.3104" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="83.6719" /><Key frame="50" value="77.4" /><Key frame="52" value="77.4" /><Key frame="57" value="77.4" /><Key frame="62" value="77.4" /><Key frame="72" value="77.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="6.5918" /><Key frame="50" value="97.9969" /><Key frame="52" value="97.9969" /><Key frame="57" value="97.9969" /><Key frame="62" value="97.9969" /><Key frame="72" value="97.9969" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="30" value="0.0404218" /><Key frame="50" value="0.02" /><Key frame="52" value="0.02" /><Key frame="57" value="0.02" /><Key frame="62" value="0.02" /><Key frame="72" value="0.02" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="81.4746" /><Key frame="50" value="69.4" /><Key frame="52" value="69.4" /><Key frame="57" value="82.3" /><Key frame="62" value="69.4" /><Key frame="72" value="69.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-51.6797" /><Key frame="43" value="-30.9" /><Key frame="50" value="-0.5" /><Key frame="52" value="-0.5" /><Key frame="57" value="-0.5" /><Key frame="62" value="-0.5" /><Key frame="72" value="-0.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="30" value="87.6256" /><Key frame="50" value="25.3104" /><Key frame="52" value="25.3104" /><Key frame="57" value="25.3104" /><Key frame="62" value="25.3104" /><Key frame="72" value="25.3104" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" /><Link inputowner="87" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="87" indexofoutput="4" /><Link inputowner="78" indexofinput="2" outputowner="1" indexofoutput="5" /><Link inputowner="0" indexofinput="4" outputowner="78" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="35" indexofinput="2" outputowner="1" indexofoutput="7" /><Link inputowner="230" indexofinput="2" outputowner="1" indexofoutput="8" /><Link inputowner="0" indexofinput="4" outputowner="35" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="230" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Show App" id="2" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="78" y="207"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self.packageUid()
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" /><Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" /></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="5" outputowner="0" indexofoutput="4" /><Link inputowner="72" indexofinput="2" outputowner="75" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="75" indexofinput="2" outputowner="72" indexofoutput="3" /><Link inputowner="7" indexofinput="2" outputowner="75" indexofoutput="5" /><Link inputowner="4" indexofinput="3" outputowner="7" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="5" outputowner="13" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="75" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>